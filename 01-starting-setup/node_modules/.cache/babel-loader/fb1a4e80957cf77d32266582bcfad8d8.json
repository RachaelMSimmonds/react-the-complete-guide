{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RSimmonds\\\\Desktop\\\\react-the-complete-guide\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter'; // function Expenses(props) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2023');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 27\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Expenses, \"dgRXrwp1OOAuhAZdn1AflYhGCDk=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"sources":["C:/Users/RSimmonds/Desktop/react-the-complete-guide/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\n\r\n// function Expenses(props) {\r\nconst Expenses = (props) => {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2023');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n      setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n      return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    let expensesContent = <p>No expenses found.</p>\r\n    if (filteredExpenses.length > 0) {\r\n      expensesContent = filteredExpenses.map((expense) => (\r\n      <ExpenseItem \r\n          key={expense.id}\r\n          title={expense.title} \r\n          amount={expense.amount} \r\n          date={expense.date}\r\n          />\r\n        ));\r\n\r\n    }\r\n\r\n    return <Card className='expenses'>\r\n      <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n      {expensesContent}\r\n      {/* {filteredExpenses.length === 0 && <p>No expenses found.</p>}\r\n      {filteredExpenses.length === 0 ? (<p>No expenses found.</p>) :\r\n      {filteredExpenses.length > 0 &&\r\n        filteredExpenses.map((expense) => (\r\n        <ExpenseItem \r\n          key={expense.id}\r\n          title={expense.title} \r\n          amount={expense.amount} \r\n          date={expense.date}\r\n          />\r\n        ))} */}\r\n\r\n      {/* {[<Card/>, <Card/>]} */}\r\n        {/* <ExpenseItem \r\n        title={props.items[0].title} \r\n        amount={props.items[0].amount} \r\n        date={props.items[0].date}\r\n      />\r\n      <ExpenseItem \r\n        title={props.items[1].title} \r\n        amount={props.items[1].amount} \r\n        date={props.items[1].date}\r\n      />\r\n      <ExpenseItem \r\n        title={props.items[2].title} \r\n        amount={props.items[2].amount} \r\n        date={props.items[2].date}\r\n      />\r\n      <ExpenseItem \r\n        title={props.items[3].title} \r\n        amount={props.items[3].amount} \r\n        date={props.items[3].date}\r\n      /> */}\r\n\r\n    </Card>\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAExB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;EAEA,MAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;IAC5CF,eAAe,CAACE,YAAD,CAAf;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;IACrD,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;EACD,CAFwB,CAAzB;;EAIA,IAAIW,eAAe,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAtB;;EACA,IAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;IAC/BD,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACvC,QAAC,WAAD;MAEI,KAAK,EAAEA,OAAO,CAACO,KAFnB;MAGI,MAAM,EAAEP,OAAO,CAACQ,MAHpB;MAII,IAAI,EAAER,OAAO,CAACC;IAJlB,GACSD,OAAO,CAACS,EADjB;MAAA;MAAA;MAAA;IAAA,QADkB,CAAlB;EASD;;EAED,oBAAO,QAAC,IAAD;IAAM,SAAS,EAAC,UAAhB;IAAA,wBACL,QAAC,cAAD;MACI,QAAQ,EAAEhB,YADd;MAEI,cAAc,EAAEE;IAFpB;MAAA;MAAA;MAAA;IAAA,QADK,EAKJS,eALI;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAyCH,CAlED;;GAAMb,Q;;KAAAA,Q;AAoEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}